//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(CS.CS_ManagementEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets8dd2ead482238019186b182e0979a262adb28907924de0fa7d202e7402691bf8))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets8dd2ead482238019186b182e0979a262adb28907924de0fa7d202e7402691bf8 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "8dd2ead482238019186b182e0979a262adb28907924de0fa7d202e7402691bf8"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CS_ManagementModelStoreContainer.Dijelovi")
            {
                return GetView0();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Servis")
            {
                return GetView1();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Serviser")
            {
                return GetView2();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Stavka servisa")
            {
                return GetView3();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Usluge")
            {
                return GetView4();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Vlasnik")
            {
                return GetView5();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Vlasnistvo")
            {
                return GetView6();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Vozilo")
            {
                return GetView7();
            }

            if (extentName == "CS_ManagementEntities.Dijelovi")
            {
                return GetView8();
            }

            if (extentName == "CS_ManagementEntities.Servis")
            {
                return GetView9();
            }

            if (extentName == "CS_ManagementEntities.Serviser")
            {
                return GetView10();
            }

            if (extentName == "CS_ManagementEntities.Stavka_servisa")
            {
                return GetView11();
            }

            if (extentName == "CS_ManagementEntities.Usluge")
            {
                return GetView12();
            }

            if (extentName == "CS_ManagementEntities.Vlasnik")
            {
                return GetView13();
            }

            if (extentName == "CS_ManagementEntities.Vlasnistvo")
            {
                return GetView14();
            }

            if (extentName == "CS_ManagementEntities.Vozilo")
            {
                return GetView15();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Marka")
            {
                return GetView16();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Model")
            {
                return GetView17();
            }

            if (extentName == "CS_ManagementModelStoreContainer.Varijanta")
            {
                return GetView18();
            }

            if (extentName == "CS_ManagementEntities.Marka")
            {
                return GetView19();
            }

            if (extentName == "CS_ManagementEntities.Model")
            {
                return GetView20();
            }

            if (extentName == "CS_ManagementEntities.Varijanta")
            {
                return GetView21();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Dijelovi.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Dijelovi
        [CS_ManagementModel.Store.Dijelovi](T1.Dijelovi_ID, T1.Dijelovi_Naziv, T1.[Dijelovi.Jed_cijena], T1.[Dijelovi.Original_dio])
    FROM (
        SELECT 
            T.ID AS Dijelovi_ID, 
            T.Naziv AS Dijelovi_Naziv, 
            T.Jed_cijena AS [Dijelovi.Jed_cijena], 
            T.Original_dio AS [Dijelovi.Original_dio], 
            True AS _from0
        FROM CS_ManagementEntities.Dijelovi AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Servis.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Servis
        [CS_ManagementModel.Store.Servis](T1.Servis_ID, T1.[Servis.Datum_vrijeme], T1.Servis_Opis, T1.[Servis.ID_serviser], T1.[Servis.ID_vozilo])
    FROM (
        SELECT 
            T.ID AS Servis_ID, 
            T.Datum_vrijeme AS [Servis.Datum_vrijeme], 
            T.Opis AS Servis_Opis, 
            T.ID_serviser AS [Servis.ID_serviser], 
            T.ID_vozilo AS [Servis.ID_vozilo], 
            True AS _from0
        FROM CS_ManagementEntities.Servis AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Serviser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Serviser
        [CS_ManagementModel.Store.Serviser](T1.Serviser_ID, T1.Serviser_Ime, T1.Serviser_Prezime, T1.[Serviser.Kor_ime], T1.Serviser_Lozinka, T1.Serviser_Admin)
    FROM (
        SELECT 
            T.ID AS Serviser_ID, 
            T.Ime AS Serviser_Ime, 
            T.Prezime AS Serviser_Prezime, 
            T.Kor_ime AS [Serviser.Kor_ime], 
            T.Lozinka AS Serviser_Lozinka, 
            T.Admin AS Serviser_Admin, 
            True AS _from0
        FROM CS_ManagementEntities.Serviser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Stavka servisa.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stavka servisa
        [CS_ManagementModel.Store.Stavka servisa](T1.[Stavka servisa_ID], T1.[Stavka servisa.ID_servis], T1.[Stavka servisa.ID_dio], T1.[Stavka servisa.ID_usluga], T1.[Stavka servisa_Kolicina])
    FROM (
        SELECT 
            T.ID AS [Stavka servisa_ID], 
            T.ID_servis AS [Stavka servisa.ID_servis], 
            T.ID_dio AS [Stavka servisa.ID_dio], 
            T.ID_usluga AS [Stavka servisa.ID_usluga], 
            T.Kolicina AS [Stavka servisa_Kolicina], 
            True AS _from0
        FROM CS_ManagementEntities.Stavka_servisa AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Usluge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usluge
        [CS_ManagementModel.Store.Usluge](T1.Usluge_ID, T1.Usluge_Naziv, T1.[Usluge.Norma_sati])
    FROM (
        SELECT 
            T.ID AS Usluge_ID, 
            T.Naziv AS Usluge_Naziv, 
            T.Norma_sati AS [Usluge.Norma_sati], 
            True AS _from0
        FROM CS_ManagementEntities.Usluge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Vlasnik.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vlasnik
        [CS_ManagementModel.Store.Vlasnik](T1.Vlasnik_ID, T1.Vlasnik_Ime, T1.Vlasnik_Prezime, T1.Vlasnik_Telefon, T1.Vlasnik_Email)
    FROM (
        SELECT 
            T.ID AS Vlasnik_ID, 
            T.Ime AS Vlasnik_Ime, 
            T.Prezime AS Vlasnik_Prezime, 
            T.Telefon AS Vlasnik_Telefon, 
            T.Email AS Vlasnik_Email, 
            True AS _from0
        FROM CS_ManagementEntities.Vlasnik AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Vlasnistvo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vlasnistvo
        [CS_ManagementModel.Store.Vlasnistvo](T1.[Vlasnistvo.ID_vlasnik], T1.[Vlasnistvo.ID_vozilo], T1.[Vlasnistvo.Pocetak_vlasnistva], T1.[Vlasnistvo.Kraj_vlasnistva])
    FROM (
        SELECT 
            T.ID_vlasnik AS [Vlasnistvo.ID_vlasnik], 
            T.ID_vozilo AS [Vlasnistvo.ID_vozilo], 
            T.Pocetak_vlasnistva AS [Vlasnistvo.Pocetak_vlasnistva], 
            T.Kraj_vlasnistva AS [Vlasnistvo.Kraj_vlasnistva], 
            True AS _from0
        FROM CS_ManagementEntities.Vlasnistvo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Vozilo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vozilo
        [CS_ManagementModel.Store.Vozilo](T1.Vozilo_ID, T1.Vozilo_VIN, T1.[Vozilo.Reg_oznaka], T1.[Vozilo.Reg_do], T1.[Vozilo.God_proizvodnje], T1.[Vozilo.ID_varijante])
    FROM (
        SELECT 
            T.ID AS Vozilo_ID, 
            T.VIN AS Vozilo_VIN, 
            T.Reg_oznaka AS [Vozilo.Reg_oznaka], 
            T.Reg_do AS [Vozilo.Reg_do], 
            T.God_proizvodnje AS [Vozilo.God_proizvodnje], 
            T.ID_varijante AS [Vozilo.ID_varijante], 
            True AS _from0
        FROM CS_ManagementEntities.Vozilo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Dijelovi.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Dijelovi
        [CS_ManagementModel.Dijelovi](T1.Dijelovi_ID, T1.Dijelovi_Naziv, T1.[Dijelovi.Jed_cijena], T1.[Dijelovi.Original_dio])
    FROM (
        SELECT 
            T.ID AS Dijelovi_ID, 
            T.Naziv AS Dijelovi_Naziv, 
            T.Jed_cijena AS [Dijelovi.Jed_cijena], 
            T.Original_dio AS [Dijelovi.Original_dio], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Dijelovi AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Servis.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Servis
        [CS_ManagementModel.Servis](T1.Servis_ID, T1.[Servis.Datum_vrijeme], T1.Servis_Opis, T1.[Servis.ID_serviser], T1.[Servis.ID_vozilo])
    FROM (
        SELECT 
            T.ID AS Servis_ID, 
            T.Datum_vrijeme AS [Servis.Datum_vrijeme], 
            T.Opis AS Servis_Opis, 
            T.ID_serviser AS [Servis.ID_serviser], 
            T.ID_vozilo AS [Servis.ID_vozilo], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Servis AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Serviser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Serviser
        [CS_ManagementModel.Serviser](T1.Serviser_ID, T1.Serviser_Ime, T1.Serviser_Prezime, T1.[Serviser.Kor_ime], T1.Serviser_Lozinka, T1.Serviser_Admin)
    FROM (
        SELECT 
            T.ID AS Serviser_ID, 
            T.Ime AS Serviser_Ime, 
            T.Prezime AS Serviser_Prezime, 
            T.Kor_ime AS [Serviser.Kor_ime], 
            T.Lozinka AS Serviser_Lozinka, 
            T.Admin AS Serviser_Admin, 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Serviser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Stavka_servisa.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stavka_servisa
        [CS_ManagementModel.Stavka_servisa](T1.[Stavka_servisa.ID], T1.[Stavka_servisa.ID_servis], T1.[Stavka_servisa.ID_dio], T1.[Stavka_servisa.ID_usluga], T1.[Stavka_servisa.Kolicina])
    FROM (
        SELECT 
            T.ID AS [Stavka_servisa.ID], 
            T.ID_servis AS [Stavka_servisa.ID_servis], 
            T.ID_dio AS [Stavka_servisa.ID_dio], 
            T.ID_usluga AS [Stavka_servisa.ID_usluga], 
            T.Kolicina AS [Stavka_servisa.Kolicina], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.[Stavka servisa] AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Usluge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usluge
        [CS_ManagementModel.Usluge](T1.Usluge_ID, T1.Usluge_Naziv, T1.[Usluge.Norma_sati])
    FROM (
        SELECT 
            T.ID AS Usluge_ID, 
            T.Naziv AS Usluge_Naziv, 
            T.Norma_sati AS [Usluge.Norma_sati], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Usluge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Vlasnik.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vlasnik
        [CS_ManagementModel.Vlasnik](T1.Vlasnik_ID, T1.Vlasnik_Ime, T1.Vlasnik_Prezime, T1.Vlasnik_Telefon, T1.Vlasnik_Email)
    FROM (
        SELECT 
            T.ID AS Vlasnik_ID, 
            T.Ime AS Vlasnik_Ime, 
            T.Prezime AS Vlasnik_Prezime, 
            T.Telefon AS Vlasnik_Telefon, 
            T.Email AS Vlasnik_Email, 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Vlasnik AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Vlasnistvo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vlasnistvo
        [CS_ManagementModel.Vlasnistvo](T1.[Vlasnistvo.ID_vlasnik], T1.[Vlasnistvo.ID_vozilo], T1.[Vlasnistvo.Pocetak_vlasnistva], T1.[Vlasnistvo.Kraj_vlasnistva])
    FROM (
        SELECT 
            T.ID_vlasnik AS [Vlasnistvo.ID_vlasnik], 
            T.ID_vozilo AS [Vlasnistvo.ID_vozilo], 
            T.Pocetak_vlasnistva AS [Vlasnistvo.Pocetak_vlasnistva], 
            T.Kraj_vlasnistva AS [Vlasnistvo.Kraj_vlasnistva], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Vlasnistvo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Vozilo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Vozilo
        [CS_ManagementModel.Vozilo](T1.Vozilo_ID, T1.Vozilo_VIN, T1.[Vozilo.Reg_oznaka], T1.[Vozilo.Reg_do], T1.[Vozilo.God_proizvodnje], T1.[Vozilo.ID_varijante])
    FROM (
        SELECT 
            T.ID AS Vozilo_ID, 
            T.VIN AS Vozilo_VIN, 
            T.Reg_oznaka AS [Vozilo.Reg_oznaka], 
            T.Reg_do AS [Vozilo.Reg_do], 
            T.God_proizvodnje AS [Vozilo.God_proizvodnje], 
            T.ID_varijante AS [Vozilo.ID_varijante], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Vozilo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Marka.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Marka
        [CS_ManagementModel.Store.Marka](T1.Marka_ID, T1.Marka_Naziv)
    FROM (
        SELECT 
            T.ID AS Marka_ID, 
            T.Naziv AS Marka_Naziv, 
            True AS _from0
        FROM CS_ManagementEntities.Marka AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Model.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Model
        [CS_ManagementModel.Store.Model](T1.Model_ID, T1.Model_Naziv, T1.[Model.ID_marke])
    FROM (
        SELECT 
            T.ID AS Model_ID, 
            T.Naziv AS Model_Naziv, 
            T.ID_marke AS [Model.ID_marke], 
            True AS _from0
        FROM CS_ManagementEntities.Model AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementModelStoreContainer.Varijanta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Varijanta
        [CS_ManagementModel.Store.Varijanta](T1.Varijanta_ID, T1.[Varijanta.Oznaka_motora], T1.[Varijanta_Mjenjač], T1.Varijanta_Karoserija, T1.[Varijanta.ID_modela])
    FROM (
        SELECT 
            T.ID AS Varijanta_ID, 
            T.Oznaka_motora AS [Varijanta.Oznaka_motora], 
            T.[Mjenjač] AS [Varijanta_Mjenjač], 
            T.Karoserija AS Varijanta_Karoserija, 
            T.ID_modela AS [Varijanta.ID_modela], 
            True AS _from0
        FROM CS_ManagementEntities.Varijanta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Marka.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Marka
        [CS_ManagementModel.Marka](T1.Marka_ID, T1.Marka_Naziv)
    FROM (
        SELECT 
            T.ID AS Marka_ID, 
            T.Naziv AS Marka_Naziv, 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Marka AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Model.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Model
        [CS_ManagementModel.Model](T1.Model_ID, T1.Model_Naziv, T1.[Model.ID_marke])
    FROM (
        SELECT 
            T.ID AS Model_ID, 
            T.Naziv AS Model_Naziv, 
            T.ID_marke AS [Model.ID_marke], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Model AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CS_ManagementEntities.Varijanta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Varijanta
        [CS_ManagementModel.Varijanta](T1.Varijanta_ID, T1.[Varijanta.Oznaka_motora], T1.[Varijanta_Mjenjač], T1.Varijanta_Karoserija, T1.[Varijanta.ID_modela])
    FROM (
        SELECT 
            T.ID AS Varijanta_ID, 
            T.Oznaka_motora AS [Varijanta.Oznaka_motora], 
            T.[Mjenjač] AS [Varijanta_Mjenjač], 
            T.Karoserija AS Varijanta_Karoserija, 
            T.ID_modela AS [Varijanta.ID_modela], 
            True AS _from0
        FROM CS_ManagementModelStoreContainer.Varijanta AS T
    ) AS T1");
        }
    }
}
